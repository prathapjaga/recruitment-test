			   KILLIS BIRD  C Question Paper 
								                  Date : 26-06-2024
                                                                                                        Marks: 25

1.  Which of the following is the correct output for the programs given below?
      #include<stdio.h>
      int main()
      {
		int a = 0, b = 1, c = 3;
		*( (a) ? &b : &a ) = a ? b : c;
		printf("%d  %d  %d\n",a,b,c);
		return 0;
      }
      A.  0 1 3
      B.  1 2 3
      C.  3 1 3
      D.  1 3 1

2.   #include<stdio.h>
      int main()
      {
		char str1[] = "Hello";
		char str2[] = "Hello";
		if(str1 == str2)
		printf("Equal\n");
		else
		printf("Unequal\n");		
		return 0;
     }
     A. Equal
     B. Unequal
     C. Error
     D. None of the above
			
3.   #include<stdio.h>
      int main()
      {
		printf( 5 + "Good Morning\n");
		return 0;
      }
       A. Good Morning
       B. Good
       C. M
       D. Morning

4.  #include<stdio.h>
     int main()
     {
	static int arr[ ] = {0,1,2,3,4};
	int *p[ ] = {arr,arr+1,arr+2,arr+3,arr+4};
	int **ptr = p;
	ptr++;
	printf("%d %d %d\n", ptr-p, *ptr-arr, **ptr);
	*ptr++;
	printf("%d %d %d\n", ptr-p, *ptr-arr, **ptr);
	*++ptr;
	printf("%d %d %d\n",ptr-p, *ptr-arr, **ptr);
	++*ptr;
	printf("%d %d %d\n",ptr-p, *ptr-arr, **ptr);
	return 0;
     }
    A.  0 0 0
         1 1 1
         2 2 2
         3 3 3
  
    B.  1 1 2
	2 2 3
	3 3 4
          4 4 1

    C.  1 1 1
          2 2 2
          3 3 3 
          3 4 4 

    D.  0 1 2
          1 2 3
	2 3 4
	3 4 Garbage

5.  #include<stdio.h>
     void fun(int);
     int main( )
     {	
	int a = 3;
	fun(a);
	printf("\n");
	return 0;
     }
      void fun(int n)
      {
           	if(n > 0)
           	{
            		fun(--n);
           		printf("%d ",n);
           		fun(--n);
           	}
      }

      A. 0 2 1 0
      B. 1 1 2 0
      C. 0 1 0 2
      D. 0 1 2 0 

6.  #include<stdio.h>
     int main( )
     {
		static char *s[ ] = {"black","white","pink","violet"};
		char **ptr[ ] = {s+3, s+2, s+1, s}, ***p;
		p = ptr;
		++p;
		printf("%s\n",**p+1);
		return 0;
     }
     A. ink
     B. ack
     C. ite 
     D. Let

7.  #include<stdio.h>
     int main( )
     {
	char str1[ ] = "KILLIS";
          char str2[ ] = "BIRD";
	char *s1 = str1, *s2 = str2;
  	   while( *s1++ = *s2++);
	   printf("%s\n",str1);
	   return 0;
       }
      A. KILLISBIRD
      B. BIRD 
      C. KILLIS
      D. (null)

8.  In the following program how will you print 50 using p?
     #include<stdio.h>
     int main()
     {
		int a[ ] = {10,20,30,40,50};
		char *p = (char *) a;
		return 0;
     }
solution : 

#include<stdio.h>

int main()
{
    int a[] = {10, 20, 30, 40, 50};
    char *p = (char *) a;

    // Move the pointer to the start of the last integer (50)
    p += 4 * 4;  // 4 integers * 4 bytes per integer

    // Dereference the pointer as an integer pointer to print the value 50
    printf("%d\n", *((int *) p));

    return 0;
}

     Write the outputs for the following programs.
9.  #include<stdio.h>
     #include<string.h>
     int main()
     {
		char *str[ ] = {"Purity", "Divinity", "Humanity","Community"};
		printf("%ld  %ld\n",sizeof(str), strlen(str[0]));
		return 0;
     }
10. #include<stdio.h>
      int main()
      {
		struct value
		{
			int bit1 : 1;
			int bit3 : 4;
			int bit4 : 4;
		} bit = {1,2,2};
		printf("%d %d %d\n",bit.bit1, bit.bit3, bit.bit4);
		return 0;
      }
11. #include<stdio.h>
     int main()
     {
		int i, a[ ] = {10,20,30,40,50};
		char *p = (char *)a;
		for(i=0;i<5;i++)
		printf("%d ",p[i]);
		printf("\n");
     }
12.  Write the Perfect Syntax of malloc( ).
13.  What is Memory leak in DMA? How to avoid it ?
14.  What is Typecasting? Howmany types of it?                                            [2M]
15.  Write a program to reverse the string using recursion function.               [5M]
16.  Write a program to read 5 students records at runtime and sort it  according to roll num. The student records must containe  roll num, name & marks.         [5M]

Key Paper : 

1.  C)
2.  B)
3.  D)
4.  C)
5.  D)
6.  A)
7.  B)
8.  printf(" %d\n", *((int *) p + 4 )) ;
9.  32, 6
10. -1 2 2
11. 10 0 0 0 20
